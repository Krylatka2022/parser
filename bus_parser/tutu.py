import re
import time
from playwright.sync_api import sync_playwright, TimeoutError
from datetime import datetime
import os

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —É—Ç–∏–ª–∏—Ç—É —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
from utils.save_to_excel import save_to_excel


# –ò–º—è –∏—Å—Ç–æ—á–Ω–∏–∫–∞
SOURCE_NAME = "tutu"

# –ë–∞–∑–æ–≤—ã–π URL –¥–ª—è –ø–æ–∏—Å–∫–∞ –∞–≤—Ç–æ–±—É—Å–æ–≤
BASE_SEARCH_URL = "https://bus.tutu.ru/raspisanie"

# –°–ª–æ–≤–∞—Ä—å ID –≥–æ—Ä–æ–¥–æ–≤ –Ω–∞ tutu.ru
CITY_IDS = {
    '—Å–∞–Ω–∫—Ç-–ø–µ—Ç–µ—Ä–±—É—Ä–≥': 1447624,
    '–º–æ—Å–∫–≤–∞': 1447874,
    '–∫–∞–∑–∞–Ω—å': 1330021,
    '—Å–æ—á–∏': 1447978,
    '—Ä–æ—Å—Ç–æ–≤-–Ω–∞-–¥–æ–Ω—É': 1391657,
    '–∫–∏—Ä–∏—à–∏': 1358042,
    '–µ–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥': 1322775,
    '–Ω–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫': 1302713,
    '–∫—Ä–∞—Å–Ω–æ–¥–∞—Ä': 1447972,
    '—É—Ñ–∞': 1333152,
    '–∫—Ä–∞—Å–Ω–æ—è—Ä—Å–∫': 1307744,
    '–≤–ª–∞–¥–∏–≤–æ—Å—Ç–æ–∫': 1297864,
    '—Ä—ã–±–∏–Ω—Å–∫': 1397803,
    '–≤–µ–ª–∏–∫–∏–π –Ω–æ–≤–≥–æ—Ä–æ–¥': 1317690,
    '–Ω–∏–∂–Ω–∏–π –Ω–æ–≤–≥–æ—Ä–æ–¥': 1427804,
    '–≤–æ–ª–≥–æ–≥—Ä–∞–¥': 1412651,
    '–≤–æ—Ä–æ–Ω–µ–∂': 1381189,
    '—Å–º–æ–ª–µ–Ω—Å–∫': 1403603,
    '–±—Ä—è–Ω—Å–∫': 1410741,
    '–≤–µ—Å—å–µ–≥–æ–Ω—Å–∫': 1369142,
    '–∫–æ—Å—Ç—Ä–æ–º–∞': 1395289,
    '—è—Ä–æ—Å–ª–∞–≤–ª—å': 1397799,
    '–ø—Å–∫–æ–≤': 1360894,
    '–º—É—Ä–º–∞–Ω—Å–∫': 1322570,

}

# –°–ª–æ–≤–∞—Ä—å –∞–Ω–≥–ª–∏–π—Å–∫–∏—Ö –Ω–∞–∑–≤–∞–Ω–∏–π –¥–ª—è —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è URL
CITY_EN_NAMES = {
    '—Å–∞–Ω–∫—Ç-–ø–µ—Ç–µ—Ä–±—É—Ä–≥': 'Sankt-Peterburg',
    '–º–æ—Å–∫–≤–∞': 'Moskva',
    '–∫–∞–∑–∞–Ω—å': 'Kazan',
    '–∫–∏—Ä–∏—à–∏': 'Kirishi',
    '—Å–æ—á–∏': 'Sochi',
    '—Ä–æ—Å—Ç–æ–≤-–Ω–∞-–¥–æ–Ω—É': 'Rostov-na-Donu',
    '–µ–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥': 'Ekaterinburg',
    '–Ω–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫': 'Novosibirsk',
    '–∫—Ä–∞—Å–Ω–æ–¥–∞—Ä': 'Krasnodar',
    '—É—Ñ–∞': 'Ufa',
    '–∫—Ä–∞—Å–Ω–æ—è—Ä—Å–∫': 'Krasnoyarsk',
    '–≤–ª–∞–¥–∏–≤–æ—Å—Ç–æ–∫': 'Vladivostok',
    '—Ä—ã–±–∏–Ω—Å–∫': 'Rybinsk',
    '–≤–µ–ª–∏–∫–∏–π –Ω–æ–≤–≥–æ—Ä–æ–¥': 'Novgorod-Velikij',
    '–Ω–∏–∂–Ω–∏–π –Ω–æ–≤–≥–æ—Ä–æ–¥': 'Nizhnij-Novgorod',
    '–≤–æ–ª–≥–æ–≥—Ä–∞–¥': 'Volgograd',
    '–≤–æ—Ä–æ–Ω–µ–∂': 'Voronezh',
    '—Å–º–æ–ª–µ–Ω—Å–∫': 'Smolensk',
    '–±—Ä—è–Ω—Å–∫': 'Bryansk',
    '–≤–µ—Å—å–µ–≥–æ–Ω—Å–∫': 'Vesegonsk',
    '–∫–æ—Å—Ç—Ä–æ–º–∞': 'Kostroma',
    '—è—Ä–æ—Å–ª–∞–≤–ª—å': 'Yaroslavl',
    '–ø—Å–∫–æ–≤': 'Pskov',
    '–º—É—Ä–º–∞–Ω—Å–∫': 'Murmansk',

}


def normalize_city_name(name: str) -> str:
    """–ù–æ—Ä–º–∞–ª–∏–∑—É–µ—Ç –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞ –≤ —Å–ª–æ–≤–∞—Ä–µ."""
    cleaned = re.split(r'\s*[*]+', name.strip())[0].lower()
    replacements = {
        '—Å–ø–±': '—Å–∞–Ω–∫—Ç-–ø–µ—Ç–µ—Ä–±—É—Ä–≥',
        '–º—Å–∫': '–º–æ—Å–∫–≤–∞',
        '–Ω.–Ω–æ–≤–≥–æ—Ä–æ–¥': '–Ω–∏–∂–Ω–∏–π –Ω–æ–≤–≥–æ—Ä–æ–¥',
        '–Ω–∏–∂–Ω–∏–π –Ω-–¥': '–Ω–∏–∂–Ω–∏–π –Ω–æ–≤–≥–æ—Ä–æ–¥',
    }
    return replacements.get(cleaned, cleaned)


def get_city_id_tutu(city_name: str) -> int | None:
    """
    –ü–æ–ª—É—á–∞–µ—Ç ID –≥–æ—Ä–æ–¥–∞ –Ω–∞ tutu.ru.
    """
    normalized_name = normalize_city_name(city_name)
    return CITY_IDS.get(normalized_name)


def get_city_en_name(city_name: str) -> str | None:
    """
    –ü–æ–ª—É—á–∞–µ—Ç –∞–Ω–≥–ª–∏–π—Å–∫–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –¥–ª—è —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è URL.
    """
    normalized_name = normalize_city_name(city_name)
    return CITY_EN_NAMES.get(normalized_name)


def convert_date_format(date_str: str) -> str:
    """–ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç –¥–∞—Ç—É –∏–∑ YYYY-MM-DD –≤ DD.MM.YYYY"""
    try:
        date_obj = datetime.strptime(date_str, "%Y-%m-%d")
        return date_obj.strftime("%d.%m.%Y")
    except ValueError:
        print(f"‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã: {date_str}")
        return date_str


def parse_tutu(date: str, from_city: str, to_city: str) -> list[dict]:
    """
    –ü–∞—Ä—Å–∏—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∞–≤—Ç–æ–±—É—Å–æ–≤/–ø–æ–µ–∑–¥–æ–≤ —Å tutu.ru

    Args:
        date (str): –î–∞—Ç–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ YYYY-MM-DD
        from_city (str): –ì–æ—Ä–æ–¥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        to_city (str): –ì–æ—Ä–æ–¥ –ø—Ä–∏–±—ã—Ç–∏—è

    Returns:
        list[dict]: –°–ø–∏—Å–æ–∫ —Å–ª–æ–≤–∞—Ä–µ–π —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Ä–µ–π—Å–∞—Ö
    """
    results = []
    print(f"üöÄ –ù–∞—á–∏–Ω–∞–µ–º –ø–∞—Ä—Å–∏–Ω–≥ tutu.ru –¥–ª—è –º–∞—Ä—à—Ä—É—Ç–∞ {from_city} ‚Üí {to_city} –Ω–∞ {date}")

    # –ü–æ–ª—É—á–∞–µ–º ID –≥–æ—Ä–æ–¥–æ–≤ –∏ –∏—Ö –∞–Ω–≥–ª–∏–π—Å–∫–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è
    from_id = get_city_id_tutu(from_city)
    to_id = get_city_id_tutu(to_city)
    from_en_name = get_city_en_name(from_city)
    to_en_name = get_city_en_name(to_city)

    if not from_id:
        print(f"‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω ID –¥–ª—è –≥–æ—Ä–æ–¥–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è: {from_city}")
        return results

    if not to_id:
        print(f"‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω ID –¥–ª—è –≥–æ—Ä–æ–¥–∞ –ø—Ä–∏–±—ã—Ç–∏—è: {to_city}")
        return results

    if not from_en_name:
        print(f"‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–æ –∞–Ω–≥–ª–∏–π—Å–∫–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è –≥–æ—Ä–æ–¥–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è: {from_city}")
        return results

    if not to_en_name:
        print(f"‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–æ –∞–Ω–≥–ª–∏–π—Å–∫–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è –≥–æ—Ä–æ–¥–∞ –ø—Ä–∏–±—ã—Ç–∏—è: {to_city}")
        return results

    # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –¥–∞—Ç—É
    formatted_date = convert_date_format(date)
    if formatted_date == date:  # –ï—Å–ª–∏ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –Ω–µ —É–¥–∞–ª–∞—Å—å
        return results

    # –§–æ—Ä–º–∏—Ä—É–µ–º URL —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –∞–Ω–≥–ª–∏–π—Å–∫–∏—Ö –Ω–∞–∑–≤–∞–Ω–∏–π –¥–ª—è –ø—É—Ç–µ–π
    search_url = f"{BASE_SEARCH_URL}/gorod_{from_en_name}/gorod_{to_en_name}/?from={from_id}&to={to_id}&date={formatted_date}&travelers=1&amount=1"
    print(f"üåê –ü–µ—Ä–µ—Ö–æ–¥ –ø–æ URL: {search_url}")

    with sync_playwright() as p:
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º persistent context –¥–ª—è –æ–±—Ö–æ–¥–∞ –∫–∞–ø—á–∏
        user_data_dir = os.path.join(os.getcwd(), "userdata_tutu")
        print(f"üîß –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –ø—Ä–æ—Ñ–∏–ª—å: {user_data_dir}")

        browser = p.chromium.launch_persistent_context(
            user_data_dir,
            headless=False,  # –ú–æ–∂–µ–º –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –≤ True –ø–æ—Å–ª–µ —Ç–µ—Å—Ç–æ–≤
            args=[
                "--no-sandbox",
                "--disable-blink-features=AutomationControlled",
                "--disable-extensions"
            ]
        )

        try:
            page = browser.new_page()
            print("üìÑ –°–æ–∑–¥–∞–Ω–∞ –Ω–æ–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞")

            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–∞–π–º–∞—É—Ç –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
            page.set_default_navigation_timeout(90000)  # 90 —Å–µ–∫—É–Ω–¥ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
            page.set_default_timeout(60000)  # 60 —Å–µ–∫—É–Ω–¥ –¥–ª—è –¥—Ä—É–≥–∏—Ö –æ–ø–µ—Ä–∞—Ü–∏–π

            # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø–æ–∏—Å–∫–∞
            print("üåê –ù–∞—á–∏–Ω–∞–µ–º –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø–æ–∏—Å–∫–∞...")
            print("    (–≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –¥–æ 90 —Å–µ–∫—É–Ω–¥)")
            response = page.goto(search_url, wait_until="load")  # –ò—Å–ø–æ–ª—å–∑—É–µ–º "load" –≤–º–µ—Å—Ç–æ "networkidle"
            print(f"‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞. –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status if response else '–ù–µ—Ç –æ—Ç–≤–µ—Ç–∞'}")

            # –ü—Ä–æ–≤–µ—Ä–∏–º URL –ø–æ—Å–ª–µ –ø–µ—Ä–µ—Ö–æ–¥–∞
            current_url = page.url
            print(f"üìç –¢–µ–∫—É—â–∏–π URL –ø–æ—Å–ª–µ –ø–µ—Ä–µ—Ö–æ–¥–∞: {current_url}")

            # –ü—Ä–æ–≤–µ—Ä–∏–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
            title = page.title()
            print(f"üè∑Ô∏è –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã: {title}")

            # –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
            print("‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ–∏—Å–∫–∞...")
            max_wait = 45  # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è
            found_offers = False

            for i in range(max_wait):
                print(f"  üîç –ü–æ–ø—ã—Ç–∫–∞ {i + 1}/{max_wait} –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞–ª–∏—á–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤...")

                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –∫–∞–ø—á–∏ –∏–ª–∏ –æ—à–∏–±–æ–∫
                try:
                    if page.locator("text=–ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏").count() > 0:
                        print("‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –∫–∞–ø—á–∞ '–ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏'")
                    if page.locator("text=–∫–∞–ø—á–∞").count() > 0:
                        print("‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω —Ç–µ–∫—Å—Ç '–∫–∞–ø—á–∞'")
                    if page.locator("iframe[src*='captcha']").count() > 0:
                        print("‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω iframe —Å –∫–∞–ø—á–µ–π")

                    if (page.locator("text=–ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏").count() > 0 or
                            page.locator("text=–∫–∞–ø—á–∞").count() > 0 or
                            page.locator("iframe[src*='captcha']").count() > 0):
                        print("‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –∫–∞–ø—á–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–π–¥–∏—Ç–µ –ø—Ä–æ–≤–µ—Ä–∫—É –≤—Ä—É—á–Ω—É—é.")
                        print("‚è≥ –ñ–¥–µ–º 45 —Å–µ–∫—É–Ω–¥ –¥–ª—è —Ä—É—á–Ω–æ–≥–æ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è...")
                        time.sleep(45)
                        continue
                except Exception as e:
                    print(f"    ‚ÑπÔ∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∫–∞–ø—á–∏: {e}")

                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ —Ä–µ–π—Å–æ–≤
                try:
                    if page.locator("text=–†–µ–π—Å–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ").count() > 0:
                        print("‚ÑπÔ∏è –ù–∞–π–¥–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ: '–†–µ–π—Å–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ'")
                    if page.locator("text=–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ").count() > 0:
                        print("‚ÑπÔ∏è –ù–∞–π–¥–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ: '–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ'")

                    if page.locator("text=–†–µ–π—Å–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ").count() > 0 or \
                            page.locator("text=–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ").count() > 0:
                        print("‚ÑπÔ∏è –†–µ–π—Å–æ–≤ –ø–æ –¥–∞–Ω–Ω–æ–º—É –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—é –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
                        browser.close()
                        return results
                except Exception as e:
                    print(f"    ‚ÑπÔ∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è —Ä–µ–π—Å–æ–≤: {e}")

                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º
                try:
                    offers = page.query_selector_all("[data-ti='offer-card']")
                    print(f"    üìä –ù–∞–π–¥–µ–Ω–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ [data-ti='offer-card']: {len(offers)}")
                    if len(offers) > 0:
                        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(offers)} –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π")
                        found_offers = True
                        break
                except Exception as e:
                    print(f"    ‚ÑπÔ∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π: {e}")

                time.sleep(1)

            if not found_offers:
                print("‚ùå –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –Ω–µ –∑–∞–≥—Ä—É–∑–∏–ª–∏—Å—å –∑–∞ –æ—Ç–≤–µ–¥–µ–Ω–Ω–æ–µ –≤—Ä–µ–º—è")
                print("üìÑ –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞...")
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º HTML –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
                debug_file = f"debug_tutu_{datetime.now().strftime('%Y%m%d_%H%M%S')}.html"
                try:
                    with open(debug_file, "w", encoding="utf-8") as f:
                        f.write(page.content())
                    print(f"üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω —Ñ–∞–π–ª –æ—Ç–ª–∞–¥–∫–∏: {debug_file}")
                except Exception as e:
                    print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞ –æ—Ç–ª–∞–¥–∫–∏: {e}")
                browser.close()
                return results

            # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ —Ä–µ–π—Å–∞—Ö
            offers = page.query_selector_all("[data-ti='offer-card']")
            print(f"üìä –ù–∞—á–∏–Ω–∞–µ–º –ø–∞—Ä—Å–∏–Ω–≥ {len(offers)} –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π")

            for idx, offer in enumerate(offers, 1):
                try:
                    print(f"  üîÑ –ü–∞—Ä—Å–∏–Ω–≥ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è {idx}...")

                    # –í—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è
                    departure_time_elem = offer.query_selector("[data-ti='departure-time']")
                    departure_time = (departure_time_elem.inner_text()).strip() if departure_time_elem else "N/A"
                    print(f"    ‚è∞ –í—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è: {departure_time}")

                    # –í—Ä–µ–º—è –ø—Ä–∏–±—ã—Ç–∏—è
                    arrival_time_elem = offer.query_selector("[data-ti='arrival-time']")
                    arrival_time = (arrival_time_elem.inner_text()).strip() if arrival_time_elem else "N/A"
                    print(f"    ‚è∞ –í—Ä–µ–º—è –ø—Ä–∏–±—ã—Ç–∏—è: {arrival_time}")

                    # –ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ø–æ–µ–∑–¥–∫–∏
                    duration_elem = offer.query_selector("[data-ti='duration-time']")
                    duration = (duration_elem.inner_text()).strip() if duration_elem else "N/A"
                    print(f"    ‚è±Ô∏è –ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {duration}")

                    # –ú–µ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è
                    departure_place_elem = offer.query_selector("[data-ti='departure'] [data-ti='place']")
                    departure_place = (departure_place_elem.inner_text()).strip() if departure_place_elem else "N/A"
                    print(f"    üìç –ú–µ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è: {departure_place}")

                    # –ì–æ—Ä–æ–¥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è
                    departure_city_elem = offer.query_selector("[data-ti='departure'] [data-ti='city']")
                    departure_city = (departure_city_elem.inner_text()).strip() if departure_city_elem else from_city
                    print(f"    üèôÔ∏è –ì–æ—Ä–æ–¥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è: {departure_city}")

                    # –ú–µ—Å—Ç–æ –ø—Ä–∏–±—ã—Ç–∏—è
                    arrival_place_elem = offer.query_selector("[data-ti='arrival'] [data-ti='place']")
                    arrival_place = (arrival_place_elem.inner_text()).strip() if arrival_place_elem else "N/A"
                    print(f"    üìç –ú–µ—Å—Ç–æ –ø—Ä–∏–±—ã—Ç–∏—è: {arrival_place}")

                    # –ì–æ—Ä–æ–¥ –ø—Ä–∏–±—ã—Ç–∏—è
                    arrival_city_elem = offer.query_selector("[data-ti='arrival'] [data-ti='city']")
                    arrival_city = (arrival_city_elem.inner_text()).strip() if arrival_city_elem else to_city
                    print(f"    üèôÔ∏è –ì–æ—Ä–æ–¥ –ø—Ä–∏–±—ã—Ç–∏—è: {arrival_city}")

                    # –ü–µ—Ä–µ–≤–æ–∑—á–∏–∫
                    carrier_elem = offer.query_selector("[data-ti='carrier-badge'] .o-text-inline")
                    carrier = (carrier_elem.inner_text()).strip() if carrier_elem else "N/A"
                    print(f"    üöå –ü–µ—Ä–µ–≤–æ–∑—á–∏–∫: {carrier}")

                    # –¶–µ–Ω–∞
                    price_elem = offer.query_selector("[data-ti='price']")
                    price_text = (price_elem.inner_text()).strip() if price_elem else "N/A"
                    print(f"    üí∞ –¶–µ–Ω–∞ (—Ç–µ–∫—Å—Ç): {price_text}")
                    # –û—á–∏—â–∞–µ–º —Ü–µ–Ω—É –æ—Ç —Å–∏–º–≤–æ–ª–æ–≤
                    price = 0.0
                    if price_text != "N/A":
                        try:
                            # –£–±–∏—Ä–∞–µ–º –Ω–µ—Ä–∞–∑—Ä—ã–≤–Ω—ã–µ –ø—Ä–æ–±–µ–ª—ã –∏ –¥—Ä—É–≥–∏–µ —Å–ø–µ—Ü—Å–∏–º–≤–æ–ª—ã
                            clean_price = re.sub(r'[^\d.,]', '', price_text.replace('\u202f', '').replace('\xa0', ''))
                            price = float(clean_price.replace(',', '.'))
                        except ValueError:
                            price = 0.0
                            print(f"    ‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å —Ü–µ–Ω—É: {price_text}")
                    print(f"    üí∞ –¶–µ–Ω–∞ (—á–∏—Å–ª–æ): {price}")

                    # –ù–æ–º–µ—Ä —Ä–µ–π—Å–∞ (–≤ tutu –µ–≥–æ –º–æ–∂–µ—Ç –Ω–µ –±—ã—Ç—å, —Å—Ç–∞–≤–∏–º N/A)
                    trip_number = "N/A"
                    print(f"    #Ô∏è‚É£ –ù–æ–º–µ—Ä —Ä–µ–π—Å–∞: {trip_number}")

                    # –°—Ç–∞—Ç—É—Å –º–µ—Å—Ç
                    free_seats = "N/A"
                    total_seats = "N/A"
                    sold_tickets = "N/A"

                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–Ω–æ–ø–∫–∏ "–ö—É–ø–∏—Ç—å"
                    buy_button = offer.query_selector("[data-ti='order-button-slot-content']")
                    if buy_button:
                        button_text = (buy_button.inner_text()).strip()
                        print(f"    üé´ –¢–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏: {button_text}")
                        if "–ö—É–ø–∏—Ç—å" in button_text:
                            free_seats = "–ï—Å—Ç—å –º–µ—Å—Ç–∞"
                    print(f"    ü™ë –°–≤–æ–±–æ–¥–Ω—ã–µ –º–µ—Å—Ç–∞: {free_seats}")

                    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
                    result = {
                        'time': departure_time,
                        'trip_number': trip_number,
                        'departure_point': f"{departure_city}, {departure_place}",
                        'arrival_point': f"{arrival_city}, {arrival_place}",
                        'carrier': carrier,
                        'total_seats': total_seats,
                        'free_seats': free_seats,
                        'sold_tickets': sold_tickets,
                        'price': price,
                        'source': SOURCE_NAME
                    }

                    results.append(result)
                    print(f"  ‚úÖ –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ {idx} —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ")
                    print(f"    üì¶ –†–µ–∑—É–ª—å—Ç–∞—Ç: {result}")

                except Exception as e:
                    print(f"  ‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è {idx}: {e}")
                    import traceback
                    traceback.print_exc()
                    continue

        except TimeoutError:
            print("‚ùå –¢–∞–π–º–∞—É—Ç –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã")
            # –ü–æ–ø—Ä–æ–±—É–µ–º —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –¥–∞–∂–µ –ø—Ä–∏ —Ç–∞–π–º–∞—É—Ç–µ
            try:
                debug_file = f"debug_tutu_timeout_{datetime.now().strftime('%Y%m%d_%H%M%S')}.html"
                with open(debug_file, "w", encoding="utf-8") as f:
                    f.write(page.content())
                print(f"üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω —Ñ–∞–π–ª –æ—Ç–ª–∞–¥–∫–∏ —Ç–∞–π–º–∞—É—Ç–∞: {debug_file}")
            except Exception as e:
                print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞ –æ—Ç–ª–∞–¥–∫–∏ —Ç–∞–π–º–∞—É—Ç–∞: {e}")
        except Exception as e:
            print(f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ tutu.ru: {e}")
            import traceback
            traceback.print_exc()
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º HTML –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
            debug_file = f"debug_tutu_error_{datetime.now().strftime('%Y%m%d_%H%M%S')}.html"
            try:
                with open(debug_file, "w", encoding="utf-8") as f:
                    f.write(page.content())
                print(f"üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω —Ñ–∞–π–ª –æ—Ç–ª–∞–¥–∫–∏ –æ—à–∏–±–∫–∏: {debug_file}")
            except Exception as e2:
                print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞ –æ—Ç–ª–∞–¥–∫–∏ –æ—à–∏–±–∫–∏: {e2}")
        finally:
            browser.close()
            print("üîí –ë—Ä–∞—É–∑–µ—Ä –∑–∞–∫—Ä—ã—Ç")

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ Excel
    # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ Excel
    if results:
        excel_filename = "data/history.xlsx"
        save_to_excel(results, filename=excel_filename, search_date=date)

    print(f"‚úÖ –ü–∞—Ä—Å–∏–Ω–≥ tutu.ru –∑–∞–≤–µ—Ä—à—ë–Ω. –ù–∞–π–¥–µ–Ω–æ {len(results)} —Ä–µ–π—Å–æ–≤.")
    return results

