import streamlit as st
import pandas as pd
import os
from datetime import date, timedelta

# –ò–º–ø–æ—Ä—Ç—ã –ø–∞—Ä—Å–µ—Ä–æ–≤ (–ø–æ–∫–∞ —Ç–æ–ª—å–∫–æ busfor)
from bus_parser.busfor import parse_busfor
from bus_parser.etraffic import parse_e_traffic
from bus_parser.tutu import parse_tutu
from bus_parser.avtovokzalspb import parse_avtovokzalspb



# –ò–º–ø–æ—Ä—Ç —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
from utils.save_to_excel import save_to_excel

# –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è –¥–∞–Ω–Ω—ã—Ö
os.makedirs("data", exist_ok=True)

st.set_page_config(
    page_title="–ü–∞—Ä—Å–µ—Ä —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞",
    page_icon="üöå",
    layout="wide"
)

# –°—Ç–∏–ª–∏–∑–∞—Ü–∏—è
st.markdown("""
<style>
    .stButton>button {
        background-color: #4CAF50;
        color: white;
        border: none;
        padding: 10px 24px;
        text-align: center;
        text-decoration: none;
        display: inline-block;
        font-size: 16px;
        margin: 4px 2px;
        cursor: pointer;
        border-radius: 4px;
    }
    .stButton>button:hover {
        background-color: #45a049;
    }
</style>
""", unsafe_allow_html=True)

st.title("üöå –ü–∞—Ä—Å–µ—Ä —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω—ã—Ö —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–π")
st.markdown("---")

# –ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å
st.sidebar.header("‚öôÔ∏è –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–∏—Å–∫–∞")

# –°–ª–æ–≤–∞—Ä—å –≥–æ—Ä–æ–¥–æ–≤ –∏–∑ busfor —Å –ø—Ä–∏–º–µ—á–∞–Ω–∏—è–º–∏
# –ö–ª—é—á - —ç—Ç–æ –∑–Ω–∞—á–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç –ø–µ—Ä–µ–¥–∞–Ω–æ –≤ –ø–∞—Ä—Å–µ—Ä (–ø–æ–ª–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ)
# –ó–Ω–∞—á–µ–Ω–∏–µ - —ç—Ç–æ —Ç–æ, —á—Ç–æ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
CITY_DISPLAY_MAP = {
    "–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥": "–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥",
    "–ú–æ—Å–∫–≤–∞": "–ú–æ—Å–∫–≤–∞",
    "–ö–∞–∑–∞–Ω—å": "–ö–∞–∑–∞–Ω—å ***", # —Ç–æ–ª—å–∫–æ –∏–∑ –ú–æ—Å–∫–≤—ã –Ω–∞ e-traffic
    "–°–æ—á–∏": "–°–æ—á–∏ ***", # —Ç–æ–ª—å–∫–æ –∏–∑ –ú–æ—Å–∫–≤—ã –Ω–∞ e-traffic
    "–†–æ—Å—Ç–æ–≤-–Ω–∞-–î–æ–Ω—É": "–†–æ—Å—Ç–æ–≤-–Ω–∞-–î–æ–Ω—É",
    "–ö–∏—Ä–∏—à–∏": "–ö–∏—Ä–∏—à–∏", #—Ç–æ–ª—å–∫–æ –æ–±—Ä–∞—Ç–Ω—ã–π —Ä–µ–π—Å –∏–∑ –ö–∏—Ä–∏—à–∏ –Ω–∞ e-traffic
    "–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥": "–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥ *",  # –ù–µ—Ç –Ω–∞ Busfor, –Ω–µ—Ç –Ω–∞ e-traffic
    "–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫": "–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫ *",  # –ù–µ—Ç –Ω–∞ Busfor, –Ω–µ—Ç –Ω–∞ e-traffic
    "–ö—Ä–∞—Å–Ω–æ–¥–∞—Ä": "–ö—Ä–∞—Å–Ω–æ–¥–∞—Ä ***", # —Ç–æ–ª—å–∫–æ –∏–∑ –ú–æ—Å–∫–≤—ã –Ω–∞ e-traffic
    "–£—Ñ–∞": "–£—Ñ–∞ ***", # —Ç–æ–ª—å–∫–æ –∏–∑ –ú–æ—Å–∫–≤—ã –Ω–∞ e-traffic
    "–ö—Ä–∞—Å–Ω–æ—è—Ä—Å–∫": "–ö—Ä–∞—Å–Ω–æ—è—Ä—Å–∫ *",  # –ù–µ—Ç –Ω–∞ Busfor, –Ω–µ—Ç –Ω–∞ e-traffic
    "–í–ª–∞–¥–∏–≤–æ—Å—Ç–æ–∫": "–í–ª–∞–¥–∏–≤–æ—Å—Ç–æ–∫ *", # –ù–µ—Ç –Ω–∞ Busfor, –Ω–µ—Ç –Ω–∞ e-traffic
    "–†—ã–±–∏–Ω—Å–∫": "–†—ã–±–∏–Ω—Å–∫ ***", # —Ç–æ–ª—å–∫–æ –∏–∑ –ú–æ—Å–∫–≤—ã –Ω–∞ e-traffic
    "–í–µ–ª–∏–∫–∏–π –ù–æ–≤–≥–æ—Ä–æ–¥": "–í–µ–ª–∏–∫–∏–π –ù–æ–≤–≥–æ—Ä–æ–¥",
    "–ù–∏–∂–Ω–∏–π –ù–æ–≤–≥–æ—Ä–æ–¥": "–ù–∏–∂–Ω–∏–π –ù–æ–≤–≥–æ—Ä–æ–¥ ***",  # —Ç–æ–ª—å–∫–æ –∏–∑ –ú–æ—Å–∫–≤—ã –Ω–∞ e-traffic
    "–í–æ–ª–≥–æ–≥—Ä–∞–¥": "–í–æ–ª–≥–æ–≥—Ä–∞–¥ ***", # —Ç–æ–ª—å–∫–æ –∏–∑ –ú–æ—Å–∫–≤—ã –Ω–∞ e-traffic
    "–í–æ—Ä–æ–Ω–µ–∂": "–í–æ—Ä–æ–Ω–µ–∂ ***", # —Ç–æ–ª—å–∫–æ –∏–∑ –ú–æ—Å–∫–≤—ã –Ω–∞ e-traffic
    "–°–º–æ–ª–µ–Ω—Å–∫": "–°–º–æ–ª–µ–Ω—Å–∫",
    "–ë—Ä—è–Ω—Å–∫": "–ë—Ä—è–Ω—Å–∫ ***", # —Ç–æ–ª—å–∫–æ –∏–∑ –ú–æ—Å–∫–≤—ã –Ω–∞ e-traffic
    "–í–µ—Å—å–µ–≥–æ–Ω—Å–∫": "–í–µ—Å—å–µ–≥–æ–Ω—Å–∫",
    "–ö–æ—Å—Ç—Ä–æ–º–∞": "–ö–æ—Å—Ç—Ä–æ–º–∞ **",  # –¢–æ–ª—å–∫–æ –∏–∑ –ú–æ—Å–∫–≤—ã –Ω–∞ Busfor –∏ –Ω–∞ e-traffic
    "–Ø—Ä–æ—Å–ª–∞–≤–ª—å": "–Ø—Ä–æ—Å–ª–∞–≤–ª—å **",  # –¢–æ–ª—å–∫–æ –∏–∑ –ú–æ—Å–∫–≤—ã –Ω–∞ Busfor –∏ –Ω–∞ e-traffic
    "–ü—Å–∫–æ–≤": "–ü—Å–∫–æ–≤",
    '–ú—É—Ä–º–∞–Ω—Å–∫': '–ú—É—Ä–º–∞–Ω—Å–∫', # —Ç–æ–ª—å–∫–æ –∏–∑ –ö–∏—Ä–∫–µ–Ω–µ—Å –Ω–∞ e-traffic
}

# –°–æ–∑–¥–∞–µ–º —Å–ø–∏—Å–æ–∫ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è (–∑–Ω–∞—á–µ–Ω–∏—è —Å–ª–æ–≤–∞—Ä—è)
CITY_OPTIONS_DISPLAY = list(CITY_DISPLAY_MAP.values())
# –°–æ–∑–¥–∞–µ–º —Å–ø–∏—Å–æ–∫ –∫–ª—é—á–µ–π –¥–ª—è –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
CITY_OPTIONS_KEYS = list(CITY_DISPLAY_MAP.keys())

# –í–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö —Å –¥–µ—Ñ–æ–ª—Ç–Ω—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏
# –ù–∞–π–¥–µ–º –∏–Ω–¥–µ–∫—Å—ã –¥–ª—è –∑–Ω–∞—á–µ–Ω–∏–π –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
default_from_display = "–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥"
default_to_display = "–ú–æ—Å–∫–≤–∞"

default_from_index = CITY_OPTIONS_DISPLAY.index(
    default_from_display) if default_from_display in CITY_OPTIONS_DISPLAY else 0
default_to_index = CITY_OPTIONS_DISPLAY.index(default_to_display) if default_to_display in CITY_OPTIONS_DISPLAY else 0

# –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–ø–∏—Å–æ–∫ —Å –ø—Ä–∏–º–µ—á–∞–Ω–∏—è–º–∏ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
from_city_display_selected = st.sidebar.selectbox("üèôÔ∏è –ì–æ—Ä–æ–¥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è", CITY_OPTIONS_DISPLAY,
                                                  index=default_from_index)
to_city_display_selected = st.sidebar.selectbox("üè¢ –ì–æ—Ä–æ–¥ –ø—Ä–∏–±—ã—Ç–∏—è", CITY_OPTIONS_DISPLAY, index=default_to_index)

# –ü–æ–ª—É—á–∞–µ–º –∫–ª—é—á–∏ (–ø–æ–ª–Ω—ã–µ –Ω–∞–∑–≤–∞–Ω–∏—è –≥–æ—Ä–æ–¥–æ–≤) –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ –≤ –ø–∞—Ä—Å–µ—Ä
# –ò—â–µ–º –∫–ª—é—á –ø–æ –∑–Ω–∞—á–µ–Ω–∏—é
from_city = next((k for k, v in CITY_DISPLAY_MAP.items() if v == from_city_display_selected),
                 from_city_display_selected)
to_city = next((k for k, v in CITY_DISPLAY_MAP.items() if v == to_city_display_selected), to_city_display_selected)

# –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –≤—ã–±–æ—Ä–∞ –¥–∞—Ç—ã: —Ç–æ–ª—å–∫–æ —Å–µ–≥–æ–¥–Ω—è –∏ –±—É–¥—É—â–∏–µ –¥–∞—Ç—ã
min_date = date.today()
search_date = st.sidebar.date_input("üìÖ –î–∞—Ç–∞ –ø–æ–µ–∑–¥–∫–∏", value=min_date, min_value=min_date)

# –í—ã–±–æ—Ä –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
all_sources = {
    "busfor": "Busfor.ru",
    'etraffic': 'E-traffic.ru',
    "tutu": "Tutu.ru",
    "avtovokzalspb": "AvtovokzalSPb.ru",
    # "sks-auto": "SKS-Auto.ru (–∑–∞–≥–ª—É—à–∫–∞)",
    # "mos_metro": "MosMetro.ru (–∑–∞–≥–ª—É—à–∫–∞)"
}
# –î–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –≤–∫–ª—é—á–∏–º —Ç–æ–ª—å–∫–æ busfor
default_sources = ["busfor"]
selected_sources = st.sidebar.multiselect(
    "üì° –ò—Å—Ç–æ—á–Ω–∏–∫–∏ –¥–∞–Ω–Ω—ã—Ö",
    options=list(all_sources.keys()),
    format_func=lambda x: all_sources[x],
    default=default_sources
)

# –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ä–≤–∏—Å–µ
st.sidebar.markdown("---")
st.sidebar.info("""
**üí° –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:**
1. –í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏ –ø—Ä–∏–±—ã—Ç–∏—è
2. –í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É –ø–æ–µ–∑–¥–∫–∏ (—Ç–æ–ª—å–∫–æ —Å–µ–≥–æ–¥–Ω—è –∏ –±—É–¥—É—â–∏–µ –¥–∞—Ç—ã)
3. –í—ã–±–µ—Ä–∏—Ç–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –¥–∞–Ω–Ω—ã—Ö
4. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "üîç –ü–æ–∏—Å–∫ —Ä–µ–π—Å–æ–≤"
5. –î–æ–∂–¥–∏—Ç–µ—Å—å –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
6. –ü—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ —Ä–µ—à–∏—Ç–µ –∫–∞–ø—á—É –≤—Ä—É—á–Ω—É—é
""")

st.sidebar.warning("""
**‚ö†Ô∏è –í–∞–∂–Ω–æ:**
- –ü—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ –º–æ–∂–µ—Ç –ø–æ—è–≤–∏—Ç—å—Å—è –∫–∞–ø—á–∞
- –†–µ—à–∏—Ç–µ –µ—ë –≤—Ä—É—á–Ω—É—é –≤ –±—Ä–∞—É–∑–µ—Ä–µ
- –ù–µ –∑–∞–∫—Ä—ã–≤–∞–π—Ç–µ –±—Ä–∞—É–∑–µ—Ä –≤–æ –≤—Ä–µ–º—è –ø–∞—Ä—Å–∏–Ω–≥–∞
""")

# –û—Å–Ω–æ–≤–Ω–∞—è –æ–±–ª–∞—Å—Ç—å
col1, col2, col3 = st.columns([1, 2, 1])

with col2:
    if st.button("üîç –ü–æ–∏—Å–∫ —Ä–µ–π—Å–æ–≤", type="primary", use_container_width=True):
        if from_city and to_city and search_date:
            search_date_str = search_date.strftime("%Y-%m-%d")

            with st.spinner("–ò–¥–µ—Ç –ø–æ–∏—Å–∫ —Ä–µ–π—Å–æ–≤... –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç..."):
                all_results = []

                # --- –ü–∞—Ä—Å–∏–Ω–≥ ---
                if "busfor" in selected_sources:
                    try:
                        with st.status("–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö —Å Busfor...", expanded=True) as status:
                            st.write("–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Busfor...")
                            # –ü–µ—Ä–µ–¥–∞–µ–º –ü–û–õ–ù–´–ï –Ω–∞–∑–≤–∞–Ω–∏—è –≥–æ—Ä–æ–¥–æ–≤
                            res = parse_busfor(search_date_str, from_city, to_city)
                            all_results.extend(res)
                            st.write(f"–ù–∞–π–¥–µ–Ω–æ {len(res)} —Ä–µ–π—Å–æ–≤")
                            status.update(label=f"Busfor: {len(res)} —Ä–µ–π—Å–æ–≤", state="complete", expanded=False)
                    except Exception as e:
                        st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ Busfor: {str(e)}")
                 # elif source == "e-traffic":
                 #    data = parse_e_traffic(date_str, from_city, to_city)

                # –ó–∞–≥–ª—É—à–∫–∏ –¥–ª—è –¥—Ä—É–≥–∏—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
                if "etraffic" in selected_sources:
                    try:
                        with st.status("–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö —Å E-Traffic...", expanded=True) as status:
                            st.write("–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ E-Traffic...")
                            res = parse_e_traffic(search_date_str, from_city, to_city)
                            all_results.extend(res)
                            st.write(f"–ù–∞–π–¥–µ–Ω–æ {len(res)} —Ä–µ–π—Å–æ–≤")
                            status.update(label=f"E-Traffic: {len(res)} —Ä–µ–π—Å–æ–≤", state="complete", expanded=False)
                    except Exception as e:
                        st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ E-Traffic: {str(e)}")

                # –ó–∞–≥–ª—É—à–∫–∏ –¥–ª—è –¥—Ä—É–≥–∏—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
                if "tutu" in selected_sources:
                    try:
                        with st.status("–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö —Å Tutu...", expanded=True) as status:
                            st.write("–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Tutu...")
                            res = parse_tutu(search_date_str, from_city, to_city)
                            all_results.extend(res)
                            st.write(f"–ù–∞–π–¥–µ–Ω–æ {len(res)} —Ä–µ–π—Å–æ–≤")
                            status.update(label=f"Tutu: {len(res)} —Ä–µ–π—Å–æ–≤", state="complete",
                                          expanded=False)
                    except Exception as e:
                        st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ Tutu: {str(e)}")

                if "avtovokzalspb" in selected_sources:
                    try:
                        with st.status("–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö —Å AvtovokzalSPb...", expanded=True) as status:
                            st.write("–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ AvtovokzalSPb...")
                            res = parse_avtovokzalspb(search_date_str, from_city, to_city)
                            all_results.extend(res)
                            st.write(f"–ù–∞–π–¥–µ–Ω–æ {len(res)} —Ä–µ–π—Å–æ–≤")
                            status.update(label=f"AvtovokzalSPb: {len(res)} —Ä–µ–π—Å–æ–≤", state="complete", expanded=False)
                    except Exception as e:
                        st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ AvtovokzalSPb: {str(e)}")

                if "sks-auto" in selected_sources:
                    try:
                        with st.status("–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö —Å SKS-Auto...", expanded=True) as status:
                            st.write("–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ SKS-Auto...")
                            res = parse_sks_auto(search_date_str, from_city, to_city)
                            all_results.extend(res)
                            st.write(f"–ù–∞–π–¥–µ–Ω–æ {len(res)} —Ä–µ–π—Å–æ–≤")
                            status.update(label=f"SKS-Auto: {len(res)} —Ä–µ–π—Å–æ–≤", state="complete", expanded=False)
                    except Exception as e:
                        st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ SKS-Auto: {str(e)}")

                # if "mosmetro" in selected_sources:
                #     try:
                #         with st.status("–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö —Å MosMetro...", expanded=True) as status:
                #             st.write("–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MosMetro...")
                #             res = parse_mosmetro(search_date_str, from_city, to_city)
                #             all_results.extend(res)
                #             st.write(f"–ù–∞–π–¥–µ–Ω–æ {len(res)} —Ä–µ–π—Å–æ–≤")
                #             status.update(label=f"MosMetro: {len(res)} —Ä–µ–π—Å–æ–≤", state="complete", expanded=False)
                #     except Exception as e:
                #         st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ MosMetro: {str(e)}")

                # --- –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ ---
                if all_results:
                    st.success(f"‚úÖ –£—Å–ø–µ—à–Ω–æ –Ω–∞–π–¥–µ–Ω–æ {len(all_results)} —Ä–µ–π—Å–æ–≤!")

                    # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
                    df_raw = pd.DataFrame(all_results)

                    # –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –Ω–∞–ª–∏—á–∏—é –¥–∞–Ω–Ω—ã—Ö
                    df_filtered = df_raw[df_raw['time'] != "N/A"]

                    if not df_filtered.empty:

                        # --- –ù–ê–ß–ê–õ–û: –û–±—Ä–∞–±–æ—Ç–∫–∞ DataFrame –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è ---
                        df_display = df_filtered.copy()

                        # –£–±–µ–∂–¥–∞–µ–º—Å—è, —á—Ç–æ —Å—Ç–æ–ª–±—Ü—ã —Å –º–µ—Å—Ç–∞–º–∏ –∏ –ø—Ä–æ–¥–∞–Ω–Ω—ã–º–∏ –±–∏–ª–µ—Ç–∞–º–∏ - —Å—Ç—Ä–æ–∫–∏
                        df_display['free_seats'] = df_display['free_seats'].astype(str)
                        df_display['total_seats'] = df_display['total_seats'].astype(str)
                        df_display['sold_tickets'] = df_display['sold_tickets'].astype(str)
                        # --- –ö–û–ù–ï–¶: –û–±—Ä–∞–±–æ—Ç–∫–∞ DataFrame –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è ---

                        # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã
                        st.subheader("üìã –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞")
                        st.dataframe(
                            df_display,
                            column_config={
                                "time": "‚è∞ –í—Ä–µ–º—è",
                                "trip_number": "üî¢ ‚Ññ —Ä–µ–π—Å–∞",
                                "departure_point": "üìç –ù–ü",
                                "arrival_point": "üéØ –ö–ü",
                                "carrier": "üöó –ü–µ—Ä–µ–≤–æ–∑—á–∏–∫",
                                "total_seats": "üí∫ –í—Å–µ–≥–æ",
                                "free_seats": "ü™ë –°–≤–æ–±–æ–¥–Ω–æ",
                                "sold_tickets": "üéüÔ∏è –ü—Ä–æ–¥–∞–Ω–æ",
                                "price": "üí∞ –¶–µ–Ω–∞ (—Ä—É–±.)",
                                "source": "üì° –ò—Å—Ç–æ—á–Ω–∏–∫"
                            },
                            hide_index=True,
                            use_container_width=True
                        )

                        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ (—Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑ –≤–Ω–∏–∑—É)
                        st.subheader("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")
                        col1, col2, col3 = st.columns(3)
                        with col1:
                            st.metric("–í—Å–µ–≥–æ —Ä–µ–π—Å–æ–≤", len(df_filtered))
                        with col2:
                            avg_price = df_filtered['price'].mean()
                            st.metric("–°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞", f"{avg_price:.0f} —Ä—É–±.")
                        with col3:
                            free_seats_numeric_for_stats = pd.to_numeric(df_filtered['free_seats'], errors='coerce')
                            avg_free_seats = free_seats_numeric_for_stats.mean()
                            if pd.notna(avg_free_seats):
                                st.metric("–°—Ä–µ–¥–Ω–µ–µ –∫–æ–ª-–≤–æ —Å–≤–æ–±–æ–¥–Ω—ã—Ö –º–µ—Å—Ç", f"{avg_free_seats:.1f}")
                            else:
                                st.metric("–°—Ä–µ–¥–Ω–µ–µ –∫–æ–ª-–≤–æ —Å–≤–æ–±–æ–¥–Ω—ã—Ö –º–µ—Å—Ç", "–ù/–î")

                        # --- –ö–Ω–æ–ø–∫–∞ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è Excel ---
                        st.markdown("---")
                        st.subheader("üíæ –°–∫–∞—á–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã")

                        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ñ–∞–π–ª
                        excel_file_path = "data/history.xlsx"
                        if os.path.exists(excel_file_path):
                            try:
                                with open(excel_file_path, "rb") as file:
                                    st.download_button(
                                        label="üì• –°–∫–∞—á–∞—Ç—å `history.xlsx`",
                                        data=file,
                                        file_name="history.xlsx",
                                        mime="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
                                        use_container_width=True
                                    )
                                st.info("–§–∞–π–ª `history.xlsx` –≥–æ—Ç–æ–≤ –∫ —Å–∫–∞—á–∏–≤–∞–Ω–∏—é. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –≤—ã—à–µ.")
                            except Exception as e:
                                st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–µ —Ñ–∞–π–ª–∞ –∫ —Å–∫–∞—á–∏–≤–∞–Ω–∏—é: {e}")
                        else:
                            st.warning("–§–∞–π–ª —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –ø–æ–∏—Å–∫ –∑–∞–Ω–æ–≤–æ.")

                    else:
                        st.warning("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤")
                        st.info("–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –ø–æ–∏—Å–∫ –∏–ª–∏ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã")
                else:
                    st.error("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Ä–µ–π—Å—ã")
                    st.info("""
                    –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:
                    - –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ä–µ–π—Å–æ–≤ –Ω–∞ –≤—ã–±—Ä–∞–Ω–Ω—É—é –¥–∞—Ç—É
                    - –¢—Ä–µ–±—É–µ—Ç—Å—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ –∫–∞–ø—á–∏
                    - –ò–∑–º–µ–Ω–∏–ª–∞—Å—å —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —Å–∞–π—Ç–∞
                    - –ü—Ä–æ–±–ª–µ–º—ã —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º
                    - –í—Å–µ –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –≤–µ—Ä–Ω—É–ª–∏ –ø—É—Å—Ç–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
                    """)

        else:
            st.warning("‚ö†Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è")

# –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ä–≤–∏—Å–µ –∏ –ø—Ä–∏–º–µ—á–∞–Ω–∏—è—Ö –∫ –≥–æ—Ä–æ–¥–∞–º
st.markdown("---")
st.subheader("‚ÑπÔ∏è –û —Å–µ—Ä–≤–∏—Å–µ –∏ –ø—Ä–∏–º–µ—á–∞–Ω–∏—è—Ö")
col1, col2 = st.columns([3, 1])
with col1:
    st.markdown("""
    **–ü–∞—Ä—Å–µ—Ä —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω—ã—Ö —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–π** - —ç—Ç–æ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø–æ–∏—Å–∫–∞ –∏ —Å–±–æ—Ä–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ä–µ–π—Å–∞—Ö 
    —Å —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Å–∞–π—Ç–æ–≤.

    **–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:**
    - üîç –ü–æ–∏—Å–∫ —Ä–µ–π—Å–æ–≤ –ø–æ –∑–∞–¥–∞–Ω–Ω—ã–º –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º
    - üìä –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≤—Ä–µ–º–µ–Ω–∏, –ø–µ—Ä–µ–≤–æ–∑—á–∏–∫–µ, —Ü–µ–Ω–∞—Ö –∏ –º–µ—Å—Ç–∞—Ö
    - üíæ –≠–∫—Å–ø–æ—Ä—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –≤ Excel —Ñ–æ—Ä–º–∞—Ç
    - üõ° –ó–∞—â–∏—Ç–∞ –æ—Ç –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
    - üì° –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –¥–∞–Ω–Ω—ã—Ö

    **–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:**
    - –ü–æ–∏—Å–∫ –º–µ–∂–¥—É –ª—é–±—ã–º–∏ –≥–æ—Ä–æ–¥–∞–º–∏ –†–æ—Å—Å–∏–∏
    - –í—ã–±–æ—Ä –¥–∞—Ç—ã –ø–æ–µ–∑–¥–∫–∏ (—Ç–æ–ª—å–∫–æ –±—É–¥—É—â–∏–µ –¥–∞—Ç—ã)
    - –í—ã–±–æ—Ä –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –¥–∞–Ω–Ω—ã—Ö
    - –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∞–∫—Ç—É–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ä–µ–π—Å–∞—Ö
    """)
with col2:
    st.markdown("""
    **–ü—Ä–∏–º–µ—á–∞–Ω–∏—è –∫ –≥–æ—Ä–æ–¥–∞–º:**
    - `*` - –ì–æ—Ä–æ–¥–∞, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –Ω–∞ –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–∞—Ö (–Ω–∞–ø—Ä–∏–º–µ—Ä, Busfor, e-traffic)
    - `**` - –ì–æ—Ä–æ–¥–∞, –¥–æ—Å—Ç—É–ø–Ω—ã–µ –¥–ª—è –ø–æ–∏—Å–∫–∞ —Ç–æ–ª—å–∫–æ –∏–∑ –ú–æ—Å–∫–≤—ã –Ω–∞ busfor –∏ –Ω–∞ e-traffic
    - `***` - –ì–æ—Ä–æ–¥–∞, –¥–æ—Å—Ç—É–ø–Ω—ã–µ –¥–ª—è –ø–æ–∏—Å–∫–∞ —Ç–æ–ª—å–∫–æ –∏–∑ –ú–æ—Å–∫–≤—ã –Ω–∞ e-traffic
    """)

# –§—É—Ç–µ—Ä
st.markdown("---")
st.caption("‚ö†Ô∏è –î–∞–Ω–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω —Ç–æ–ª—å–∫–æ –¥–ª—è –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã—Ö —Ü–µ–ª–µ–π. –£–≤–∞–∂–∞–π—Ç–µ —É—Å–ª–æ–≤–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Å–∞–π—Ç–æ–≤.")


